/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthRouteRouteImport } from './routes/_unauth/route'
import { Route as AuthNoLayoutRouteRouteImport } from './routes/_authNoLayout/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as UnauthSignupRouteImport } from './routes/_unauth/signup'
import { Route as UnauthLoginRouteImport } from './routes/_unauth/login'
import { Route as UnauthForgotRouteImport } from './routes/_unauth/forgot'
import { Route as AuthSpaceIndexRouteImport } from './routes/_auth/space/index'
import { Route as AuthSettingsIndexRouteImport } from './routes/_auth/settings/index'
import { Route as AuthOverviewIndexRouteImport } from './routes/_auth/overview/index'
import { Route as AuthListIndexRouteImport } from './routes/_auth/list/index'
import { Route as AuthInboxIndexRouteImport } from './routes/_auth/inbox/index'
import { Route as AuthFolderIndexRouteImport } from './routes/_auth/folder/index'
import { Route as AuthCalenderIndexRouteImport } from './routes/_auth/calender/index'
import { Route as AuthBoardIndexRouteImport } from './routes/_auth/board/index'
import { Route as AuthNoLayoutTaskTaskIdRouteImport } from './routes/_authNoLayout/task/$taskId'

const UnauthRouteRoute = UnauthRouteRouteImport.update({
  id: '/_unauth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthNoLayoutRouteRoute = AuthNoLayoutRouteRouteImport.update({
  id: '/_authNoLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthSignupRoute = UnauthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => UnauthRouteRoute,
} as any)
const UnauthLoginRoute = UnauthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthRouteRoute,
} as any)
const UnauthForgotRoute = UnauthForgotRouteImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => UnauthRouteRoute,
} as any)
const AuthSpaceIndexRoute = AuthSpaceIndexRouteImport.update({
  id: '/space/',
  path: '/space/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSettingsIndexRoute = AuthSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthOverviewIndexRoute = AuthOverviewIndexRouteImport.update({
  id: '/overview/',
  path: '/overview/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthListIndexRoute = AuthListIndexRouteImport.update({
  id: '/list/',
  path: '/list/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthInboxIndexRoute = AuthInboxIndexRouteImport.update({
  id: '/inbox/',
  path: '/inbox/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthFolderIndexRoute = AuthFolderIndexRouteImport.update({
  id: '/folder/',
  path: '/folder/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthCalenderIndexRoute = AuthCalenderIndexRouteImport.update({
  id: '/calender/',
  path: '/calender/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthBoardIndexRoute = AuthBoardIndexRouteImport.update({
  id: '/board/',
  path: '/board/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthNoLayoutTaskTaskIdRoute = AuthNoLayoutTaskTaskIdRouteImport.update({
  id: '/task/$taskId',
  path: '/task/$taskId',
  getParentRoute: () => AuthNoLayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/forgot': typeof UnauthForgotRoute
  '/login': typeof UnauthLoginRoute
  '/signup': typeof UnauthSignupRoute
  '/task/$taskId': typeof AuthNoLayoutTaskTaskIdRoute
  '/board': typeof AuthBoardIndexRoute
  '/calender': typeof AuthCalenderIndexRoute
  '/folder': typeof AuthFolderIndexRoute
  '/inbox': typeof AuthInboxIndexRoute
  '/list': typeof AuthListIndexRoute
  '/overview': typeof AuthOverviewIndexRoute
  '/settings': typeof AuthSettingsIndexRoute
  '/space': typeof AuthSpaceIndexRoute
}
export interface FileRoutesByTo {
  '/forgot': typeof UnauthForgotRoute
  '/login': typeof UnauthLoginRoute
  '/signup': typeof UnauthSignupRoute
  '/task/$taskId': typeof AuthNoLayoutTaskTaskIdRoute
  '/board': typeof AuthBoardIndexRoute
  '/calender': typeof AuthCalenderIndexRoute
  '/folder': typeof AuthFolderIndexRoute
  '/inbox': typeof AuthInboxIndexRoute
  '/list': typeof AuthListIndexRoute
  '/overview': typeof AuthOverviewIndexRoute
  '/settings': typeof AuthSettingsIndexRoute
  '/space': typeof AuthSpaceIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_authNoLayout': typeof AuthNoLayoutRouteRouteWithChildren
  '/_unauth': typeof UnauthRouteRouteWithChildren
  '/_unauth/forgot': typeof UnauthForgotRoute
  '/_unauth/login': typeof UnauthLoginRoute
  '/_unauth/signup': typeof UnauthSignupRoute
  '/_authNoLayout/task/$taskId': typeof AuthNoLayoutTaskTaskIdRoute
  '/_auth/board/': typeof AuthBoardIndexRoute
  '/_auth/calender/': typeof AuthCalenderIndexRoute
  '/_auth/folder/': typeof AuthFolderIndexRoute
  '/_auth/inbox/': typeof AuthInboxIndexRoute
  '/_auth/list/': typeof AuthListIndexRoute
  '/_auth/overview/': typeof AuthOverviewIndexRoute
  '/_auth/settings/': typeof AuthSettingsIndexRoute
  '/_auth/space/': typeof AuthSpaceIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot'
    | '/login'
    | '/signup'
    | '/task/$taskId'
    | '/board'
    | '/calender'
    | '/folder'
    | '/inbox'
    | '/list'
    | '/overview'
    | '/settings'
    | '/space'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot'
    | '/login'
    | '/signup'
    | '/task/$taskId'
    | '/board'
    | '/calender'
    | '/folder'
    | '/inbox'
    | '/list'
    | '/overview'
    | '/settings'
    | '/space'
  id:
    | '__root__'
    | '/_auth'
    | '/_authNoLayout'
    | '/_unauth'
    | '/_unauth/forgot'
    | '/_unauth/login'
    | '/_unauth/signup'
    | '/_authNoLayout/task/$taskId'
    | '/_auth/board/'
    | '/_auth/calender/'
    | '/_auth/folder/'
    | '/_auth/inbox/'
    | '/_auth/list/'
    | '/_auth/overview/'
    | '/_auth/settings/'
    | '/_auth/space/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AuthNoLayoutRouteRoute: typeof AuthNoLayoutRouteRouteWithChildren
  UnauthRouteRoute: typeof UnauthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauth': {
      id: '/_unauth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authNoLayout': {
      id: '/_authNoLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthNoLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauth/signup': {
      id: '/_unauth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnauthSignupRouteImport
      parentRoute: typeof UnauthRouteRoute
    }
    '/_unauth/login': {
      id: '/_unauth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthLoginRouteImport
      parentRoute: typeof UnauthRouteRoute
    }
    '/_unauth/forgot': {
      id: '/_unauth/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof UnauthForgotRouteImport
      parentRoute: typeof UnauthRouteRoute
    }
    '/_auth/space/': {
      id: '/_auth/space/'
      path: '/space'
      fullPath: '/space'
      preLoaderRoute: typeof AuthSpaceIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/settings/': {
      id: '/_auth/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/overview/': {
      id: '/_auth/overview/'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof AuthOverviewIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/list/': {
      id: '/_auth/list/'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof AuthListIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/inbox/': {
      id: '/_auth/inbox/'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof AuthInboxIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/folder/': {
      id: '/_auth/folder/'
      path: '/folder'
      fullPath: '/folder'
      preLoaderRoute: typeof AuthFolderIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/calender/': {
      id: '/_auth/calender/'
      path: '/calender'
      fullPath: '/calender'
      preLoaderRoute: typeof AuthCalenderIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/board/': {
      id: '/_auth/board/'
      path: '/board'
      fullPath: '/board'
      preLoaderRoute: typeof AuthBoardIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authNoLayout/task/$taskId': {
      id: '/_authNoLayout/task/$taskId'
      path: '/task/$taskId'
      fullPath: '/task/$taskId'
      preLoaderRoute: typeof AuthNoLayoutTaskTaskIdRouteImport
      parentRoute: typeof AuthNoLayoutRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthBoardIndexRoute: typeof AuthBoardIndexRoute
  AuthCalenderIndexRoute: typeof AuthCalenderIndexRoute
  AuthFolderIndexRoute: typeof AuthFolderIndexRoute
  AuthInboxIndexRoute: typeof AuthInboxIndexRoute
  AuthListIndexRoute: typeof AuthListIndexRoute
  AuthOverviewIndexRoute: typeof AuthOverviewIndexRoute
  AuthSettingsIndexRoute: typeof AuthSettingsIndexRoute
  AuthSpaceIndexRoute: typeof AuthSpaceIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthBoardIndexRoute: AuthBoardIndexRoute,
  AuthCalenderIndexRoute: AuthCalenderIndexRoute,
  AuthFolderIndexRoute: AuthFolderIndexRoute,
  AuthInboxIndexRoute: AuthInboxIndexRoute,
  AuthListIndexRoute: AuthListIndexRoute,
  AuthOverviewIndexRoute: AuthOverviewIndexRoute,
  AuthSettingsIndexRoute: AuthSettingsIndexRoute,
  AuthSpaceIndexRoute: AuthSpaceIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AuthNoLayoutRouteRouteChildren {
  AuthNoLayoutTaskTaskIdRoute: typeof AuthNoLayoutTaskTaskIdRoute
}

const AuthNoLayoutRouteRouteChildren: AuthNoLayoutRouteRouteChildren = {
  AuthNoLayoutTaskTaskIdRoute: AuthNoLayoutTaskTaskIdRoute,
}

const AuthNoLayoutRouteRouteWithChildren =
  AuthNoLayoutRouteRoute._addFileChildren(AuthNoLayoutRouteRouteChildren)

interface UnauthRouteRouteChildren {
  UnauthForgotRoute: typeof UnauthForgotRoute
  UnauthLoginRoute: typeof UnauthLoginRoute
  UnauthSignupRoute: typeof UnauthSignupRoute
}

const UnauthRouteRouteChildren: UnauthRouteRouteChildren = {
  UnauthForgotRoute: UnauthForgotRoute,
  UnauthLoginRoute: UnauthLoginRoute,
  UnauthSignupRoute: UnauthSignupRoute,
}

const UnauthRouteRouteWithChildren = UnauthRouteRoute._addFileChildren(
  UnauthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AuthNoLayoutRouteRoute: AuthNoLayoutRouteRouteWithChildren,
  UnauthRouteRoute: UnauthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
